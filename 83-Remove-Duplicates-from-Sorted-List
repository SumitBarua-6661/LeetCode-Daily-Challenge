/**
 * Removes duplicates from a sorted linked list.
 * Time Complexity: O(n)
 * Space Complexity: O(1)
 * @param {ListNode} head
 * @return {ListNode}
 */

function deleteDuplicates(head) {
    let current = head;

    while (current !== null && current.next !== null) {
        if (current.val === current.next.val) {
            // Skip the duplicate node
            current.next = current.next.next;
        } else {
            // Move to the next distinct element
            current = current.next;
        }
    }

    return head;
}
